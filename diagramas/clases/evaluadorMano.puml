@startuml Diagrama de Clases EvaluadorMano

skinparam classAttributeIconSize 0

title Diagrama de Clases EvaluadorMano

interface EvaluadorMano {
    + evaluar(ArrayList<Carta> cartas): Mano
}

abstract class EvaluadorAbstracto implements EvaluadorMano {
    - EvaluadorMano siguiente
    + void setSiguiente(EvaluadorMano siguiente)
    + Mano evaluar(ArrayList<Carta> cartas)
    + abstract Mano evaluarMano(ArrayList<Carta> cartas)
}

class EvaluadorColor extends EvaluadorAbstracto {
    + Mano evaluarMano(ArrayList<Carta> cartas)
    - boolean esColor(ArrayList<Carta> cartas)
}

class EvaluadorDoblePar extends EvaluadorAbstracto {
    + Mano evaluarMano(ArrayList<Carta> cartas)
}

class EvaluadorEscalera extends EvaluadorAbstracto {
    + Mano evaluarMano(ArrayList<Carta> cartas)
}

class EvaluadorEscaleraColor extends EvaluadorAbstracto {
    + Mano evaluarMano(ArrayList<Carta> cartas)
    - boolean esEscalera(ArrayList<Carta> cartas)
    - boolean esColor(ArrayList<Carta> cartas)
}

class EvaluadorEscaleraReal extends EvaluadorAbstracto {
    + Mano evaluarMano(ArrayList<Carta> cartas)
    - boolean esColor(ArrayList<Carta> cartas)
    - boolean esEscalera(ArrayList<Carta> cartas)
    - boolean contieneAs(ArrayList<Carta> cartas)
}

class EvaluadorFull extends EvaluadorAbstracto {
    + Mano evaluarMano(ArrayList<Carta> cartas)
}

class EvaluadorPar extends EvaluadorAbstracto {
    + Mano evaluarMano(ArrayList<Carta> cartas)
}

class EvaluadorPoker extends EvaluadorAbstracto {
    + Mano evaluarMano(ArrayList<Carta> cartas)
    - boolean tieneRepetidos(ArrayList<Carta> cartas, int cantidad)
}

class EvaluadorTrio extends EvaluadorAbstracto {
    + Mano evaluarMano(ArrayList<Carta> cartas)
    - boolean tieneRepetidos(ArrayList<Carta> cartas, int cantidad)
}

@enduml